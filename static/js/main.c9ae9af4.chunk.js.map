{"version":3,"sources":["Assets/code.svg","Components/NameInput.tsx","Redux/actions.js","Components/SsnInput.tsx","Components/EmailInput.tsx","Components/MobileInput.tsx","Components/CountryInput.tsx","Components/AvatarInput.tsx","Components/DrawerForm.tsx","MainComponent.tsx","Components/ResonsiveTable.tsx","App.tsx","serviceWorker.ts","Redux/reducer.js","index.tsx"],"names":["module","exports","connect","state","name","dispatch","setName","value","type","props","clearForm","useState","setValue","isValid","setIsValid","ls","tempValue","setTempValue","useEffect","validateName","console","log","test","handleInput","e","preventDefault","input","target","warning","Item","validateStatus","help","onChange","placeholder","defaultValue","success","hasFeedback","emptyInput","length","personnummer","require","ssn","setSsn","validateSSN","valid","email","setEmail","validateEmail","String","toLowerCase","mobile","setMobile","validatePhoneNr","number","Option","country","setCountry","request","a","fetch","response","json","countryList","map","c","handleChange","key","beforeUpload","file","isJpgOrPng","message","error","isLt2M","size","image","setImage","loading","setLoading","imageUrl","setImageUrl","uploadButton","className","listType","showUploadList","action","info","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","src","alt","style","width","DrawerForm","create","addUser","visible","setVisible","onClose","uniqueID","replace","r","Math","random","toString","handleSubmit","errorMsg","newUser","id","avatar","localStorage","getItem","cleanData","setItem","JSON","stringify","lsData","parse","notification","open","description","icon","color","window","location","reload","customWidth","innerWidth","onClick","title","onSubmit","layout","hideRequiredMark","gutter","span","label","position","left","bottom","borderTop","padding","background","textAlign","marginRight","data","object","MainComponent","deleteUser","userData","setUserData","handleDelete","userObject","updatedUserData","filter","parsedOutput","deleteUserLocalStorage","cancel","dataSource","item","backgroundColor","opacity","paddingLeft","userobject","onConfirm","onCancel","okText","cancelText","href","App","height","borderRadius","justifyContent","Logo","Boolean","hostname","match","initialState","reducer","updatedData","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9ae9af4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/code.45af7c0f.svg\";","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Input, Form } from 'antd'\nimport * as actionTypes from '../Redux/actions'\nimport * as ls from 'local-storage'\n\nconst NameInput = (props: any) => {\n  const { name, setName, clearForm } = props\n  const [value, setValue] = useState('')\n  const [isValid, setIsValid] = useState(false)\n\n  const [tempValue, setTempValue] = useState(() => (ls.get('name') ? ls.get('name') : ''))\n\n  useEffect(() => {\n    validateName(value)\n    setValue(tempValue)\n  })\n\n  isValid ? setName(value) : setName('')\n\n  const validateName = (name: string) => {\n    console.log(name, 'this is validation ')\n    if (!/[^a-zA-ZöäåÖÄÅ\\s]/.test(name)) {\n      console.log(`${name} is Valid`)\n      setIsValid(true)\n    } else {\n      console.log(`${name} is NOT Valid`)\n      setIsValid(false)\n    }\n  }\n\n  const handleInput = (e: any) => {\n    e.preventDefault()\n    let input = e.target.value\n    setValue(input)\n    setTempValue(input)\n    ls.set('name', input)\n  }\n\n  const warning = (\n    <Form>\n      <Form.Item validateStatus={'warning'} help={'Name has invalid Characters'}>\n        <Input\n          onChange={e => handleInput(e)}\n          placeholder=\"Protik Sarkar\"\n          value={tempValue ? tempValue : value}\n          defaultValue={'tempValue'}\n        />\n      </Form.Item>\n    </Form>\n  )\n\n  const success = (\n    <Form>\n      <Form.Item validateStatus={'success'} hasFeedback help={''}>\n        <Input\n          onChange={e => handleInput(e)}\n          placeholder=\"Protik Sarkar\"\n          value={tempValue ? tempValue : value}\n          defaultValue={'tempValue'}\n        />\n      </Form.Item>\n    </Form>\n  )\n\n  const emptyInput = (\n    <Form>\n      <Form.Item validateStatus={''} help={''}>\n        <Input\n          onChange={e => handleInput(e)}\n          placeholder=\"Protik Sarkar\"\n          value={tempValue ? tempValue : value}\n          defaultValue={'tempValue'}\n        />\n      </Form.Item>\n    </Form>\n  )\n  return <Form>{tempValue.length === 0 ? emptyInput : isValid ? success : warning}</Form>\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    ...state,\n    name: state.name\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    setName: (value: any) => dispatch({ type: actionTypes.SET_NAME, name: value })\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NameInput)\n","export const SET_IMAGE = 'SET_IMAGE'\nexport const SET_NAME = 'SET_NAME'\nexport const SET_SSN = 'SET_SSN'\nexport const SET_MOBILE = 'SET_MOBILE'\nexport const SET_EMAIL = 'SET_EMAIL'\nexport const SET_COUNTRY = 'SET_COUNTRY'\nexport const ADD_USER = 'ADD_USER'\nexport const DELETE_USER = 'DELETE_USER'\nexport const CLEAR_FORM = 'CLEAR_FROM'\n","import React, { useState, useEffect } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { Input, Form } from 'antd'\nimport * as actionTypes from '../Redux/actions'\n\nimport * as ls from 'local-storage'\n\nconst personnummer = require('personnummer')\n\nconst SsnInput = (props: any) => {\n  const [value, setValue] = useState()\n  const [isValid, setIsValid] = useState(false)\n  const { ssn, setSsn } = props\n\n  const [tempValue, setTempValue] = useState(() => (ls.get('ssn') ? ls.get('ssn') : ''))\n\n  // ls.set('ssn', value)\n\n  useEffect(() => {\n    validateSSN(value)\n    setValue(tempValue)\n  })\n\n  isValid ? setSsn(value) : setSsn('')\n  console.log('reduxx', ssn)\n\n  const validateSSN = (ssn: number) => {\n    if (personnummer.valid(ssn)) {\n      setIsValid(true)\n      console.log(`${ssn} is valid`)\n    } else {\n      setIsValid(false)\n      console.log(`${ssn} is NOT valid`)\n    }\n  }\n  const handleInput = (e: any) => {\n    e.preventDefault()\n    let input = e.target.value\n    setValue(input)\n    setTempValue(input)\n    ls.set('ssn', input)\n  }\n  const warning = (\n    <Form>\n      <Form.Item validateStatus={'error'} help={'Use this format: ÅÅÅÅMMDDNNNN'}>\n        <Input\n          onChange={e => handleInput(e)}\n          placeholder=\"ÅÅÅMMDDNNNN\"\n          value={tempValue ? tempValue : value}\n          defaultValue={'tempValue'}\n        />\n      </Form.Item>\n    </Form>\n  )\n\n  const success = (\n    <Form>\n      <Form.Item validateStatus={'success'} hasFeedback help={''}>\n        <Input\n          onChange={e => handleInput(e)}\n          placeholder=\"ÅÅÅÅMMDDNNNN\"\n          value={tempValue ? tempValue : value}\n          defaultValue={'tempValue'}\n        />\n      </Form.Item>\n    </Form>\n  )\n\n  const emptyInput = (\n    <Form>\n      <Form.Item validateStatus={'success'} help={''}>\n        <Input\n          onChange={e => handleInput(e)}\n          placeholder=\"ÅÅÅÅMMDDNNNN\"\n          value={tempValue ? tempValue : value}\n          defaultValue={'tempValue'}\n        />\n      </Form.Item>\n    </Form>\n  )\n  return <Form>{tempValue.length === 0 ? emptyInput : isValid ? success : warning}</Form>\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    ...state,\n    ssn: state.ssn\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    setSsn: (value: any) => dispatch({ type: actionTypes.SET_SSN, ssn: value })\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SsnInput)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Input, Form } from 'antd'\nimport * as actionTypes from '../Redux/actions'\nimport * as ls from 'local-storage'\n\nconst EmailInput = (props: any) => {\n  const [value, setValue] = useState('')\n  const [isValid, setIsValid] = useState(false)\n  const { email, setEmail } = props\n\n  const [tempValue, setTempValue] = useState(() => (ls.get('email') ? ls.get('email') : ''))\n\n  useEffect(() => {\n    validateEmail(value)\n    setValue(tempValue)\n  })\n\n  isValid ? setEmail(value) : setEmail('')\n  console.log('reduxx', email)\n\n  const validateEmail = (email: string) => {\n    const regEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    let valid = regEx.test(String(email).toLowerCase())\n    console.log(valid)\n    if (valid) {\n      setIsValid(true)\n      // setEmail(value);\n    } else {\n      setIsValid(false)\n      // setEmail('');\n    }\n  }\n\n  const handleInput = (e: any) => {\n    e.preventDefault()\n    let input = e.target.value\n    setValue(input)\n    setTempValue(input)\n    ls.set('email', input)\n  }\n  const warning = (\n    <Form>\n      <Form.Item validateStatus={'warning'} help={'Use a valid Email'}>\n        <Input\n          onChange={e => handleInput(e)}\n          placeholder=\"ÅÅÅMMDDNNNN\"\n          value={tempValue ? tempValue : value}\n          defaultValue={'tempValue'}\n        />\n      </Form.Item>\n    </Form>\n  )\n\n  const success = (\n    <Form>\n      <Form.Item validateStatus={'success'} hasFeedback help={''}>\n        <Input\n          onChange={e => handleInput(e)}\n          placeholder=\"sarkar.protik1@gmail.com\"\n          value={tempValue ? tempValue : value}\n          defaultValue={'tempValue'}\n        />\n      </Form.Item>\n    </Form>\n  )\n\n  const emptyInput = (\n    <Form>\n      <Form.Item validateStatus={'success'} help={''}>\n        <Input\n          onChange={e => handleInput(e)}\n          placeholder=\"sarkar.protik1@gmail.com\"\n          value={tempValue ? tempValue : value}\n          defaultValue={'tempValue'}\n        />\n      </Form.Item>\n    </Form>\n  )\n  return <Form>{tempValue.length === 0 ? emptyInput : isValid ? success : warning}</Form>\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    ...state,\n    email: state.email\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    setEmail: (value: any) => dispatch({ type: actionTypes.SET_EMAIL, email: value })\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmailInput)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actionTypes from '../Redux/actions'\nimport { Input, Form } from 'antd'\nimport * as ls from 'local-storage'\n\nconst MobileInput = (props: any) => {\n  const [value, setValue] = useState('')\n  const [isValid, setIsValid] = useState(false)\n  const { mobile, setMobile } = props\n\n  const [tempValue, setTempValue] = useState(() => (ls.get('mobile') ? ls.get('mobile') : ''))\n\n  // ls.set('mobile', value)\n\n  useEffect(() => {\n    validatePhoneNr(value)\n    setValue(tempValue)\n  })\n\n  isValid ? setMobile(value) : setMobile('')\n  console.log('redux', mobile)\n\n  const validatePhoneNr = (number: any) => {\n    if (number.length === 10) {\n      console.log(`${number} is Valid`)\n      setIsValid(true)\n      //   setPhoneNr(number);\n    } else {\n      //   setPhoneNr(\"\");\n      setIsValid(false)\n      console.log(`${number} is NOT Valid`)\n    }\n  }\n\n  const handleInput = (e: any) => {\n    e.preventDefault()\n    let input = e.target.value\n    setValue(input)\n    setTempValue(input)\n    ls.set('mobile', input)\n  }\n  const warning = (\n    <Form>\n      <Form.Item validateStatus={'warning'} help={'Use a valid Phone Number'}>\n        <Input\n          onChange={e => handleInput(e)}\n          placeholder=\"0700510492\"\n          value={tempValue ? tempValue : value}\n          defaultValue={'tempValue'}\n        />\n      </Form.Item>\n    </Form>\n  )\n\n  const success = (\n    <Form>\n      <Form.Item validateStatus={'success'} hasFeedback help={''}>\n        <Input\n          onChange={e => handleInput(e)}\n          placeholder=\"0700510492\"\n          value={tempValue ? tempValue : value}\n          defaultValue={'tempValue'}\n        />\n      </Form.Item>\n    </Form>\n  )\n\n  const emptyInput = (\n    <Form>\n      <Form.Item validateStatus={'success'} help={''}>\n        <Input\n          onChange={e => handleInput(e)}\n          placeholder=\"0700510492\"\n          value={tempValue ? tempValue : value}\n          defaultValue={'tempValue'}\n        />\n      </Form.Item>\n    </Form>\n  )\n  return <Form>{tempValue.length === 0 ? emptyInput : isValid ? success : warning}</Form>\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    ...state,\n    mobile: state.mobile\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    setMobile: (value: any) => dispatch({ type: actionTypes.SET_MOBILE, mobile: value })\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MobileInput)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actionTypes from '../Redux/actions'\nimport { Form, Select } from 'antd'\nimport * as ls from 'local-storage'\n\nconst { Option } = Select\n\nconst CountryInput = (props: any) => {\n  const [value, setValue] = useState([])\n\n  const { setCountry } = props\n\n  const [tempValue, setTempValue] = useState(() => (ls.get('country') ? ls.get('country') : ''))\n\n  // ls.set('country', tempValue)\n\n  const request = async () => {\n    const response = await fetch('https://restcountries.eu/rest/v2/all')\n    const json = await response.json()\n    let countryList = json.map((c: any) => c.name)\n    setValue(countryList)\n  }\n\n  useEffect(() => {\n    request()\n  }, [])\n\n  const handleChange = (e: any) => {\n    console.log('this is the only country', e)\n    setTempValue(e)\n    setCountry(e)\n  }\n\n  const emptyInput = (\n    <Form>\n      <Form.Item validateStatus={''} help={''}>\n        <Select defaultValue={tempValue} onChange={handleChange} placeholder=\"Select a Country\">\n          {value.map((country: any) => {\n            return (\n              <Option key={country} value={country}>\n                {country}\n              </Option>\n            )\n          })}\n        </Select>\n      </Form.Item>\n    </Form>\n  )\n\n  const success = (\n    <Form>\n      <Form.Item validateStatus={'success'} hasFeedback help={''}>\n        <Select defaultValue={tempValue} onChange={handleChange} placeholder=\"Select a Country\">\n          {value.map((country: any) => {\n            return (\n              <Option key={country} value={country}>\n                {country}\n              </Option>\n            )\n          })}\n        </Select>\n      </Form.Item>\n    </Form>\n  )\n\n  return tempValue ? success : emptyInput\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    ...state,\n    country: state.country\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    setCountry: (value: any) => dispatch({ type: actionTypes.SET_COUNTRY, country: value })\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CountryInput)\n","import React, { useState } from 'react'\nimport { Upload, Icon, message } from 'antd'\n\nimport { connect } from 'react-redux'\n\nimport * as actionTypes from '../Redux/actions'\n\nconst getBase64 = (img: any, callback: any) => {\n  const reader = new FileReader()\n  reader.addEventListener('load', () => callback(reader.result))\n  reader.readAsDataURL(img)\n}\n\nconst beforeUpload = (file: any) => {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!')\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!')\n  }\n  return isJpgOrPng && isLt2M\n}\n\nconst AvatarInput = (props: any) => {\n  const { setImage } = props\n  const [loading, setLoading] = useState(false)\n  const [imageUrl, setImageUrl] = useState('')\n\n  const handleChange = (info: any) => {\n    if (info.file.status === 'uploading') {\n      setLoading(true)\n      return\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl: any) => {\n        setImageUrl(imageUrl)\n        setImage(imageUrl)\n        setLoading(false)\n      })\n    }\n  }\n\n  const uploadButton = (\n    <div>\n      <Icon type={loading ? 'loading' : 'plus'} />\n      <div className=\"ant-upload-text\">Upload</div>\n    </div>\n  )\n\n  return (\n    <Upload\n      name=\"avatar\"\n      listType=\"picture-card\"\n      className=\"avatar-uploader\"\n      showUploadList={false}\n      action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n      beforeUpload={beforeUpload}\n      onChange={handleChange}\n    >\n      {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n    </Upload>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    ...state,\n    image: state.image\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    setImage: (value: any) => dispatch({ type: actionTypes.SET_IMAGE, image: value })\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AvatarInput)\n","import React, { useState } from 'react'\nimport { notification, message, Drawer, Form, Button, Col, Row, Icon } from 'antd'\nimport NameInput from './NameInput'\nimport SsnInput from './SsnInput'\nimport EmailInput from './EmailInput'\nimport MobileInput from './MobileInput'\nimport CountryInput from './CountryInput'\nimport AvatarInput from './AvatarInput'\n\nimport * as ls from 'local-storage'\n\nimport { connect } from 'react-redux'\n\nimport * as actionTypes from '../Redux/actions'\n\nconst openNotification = () => {\n  notification.open({\n    message: 'Sucess!',\n    description: 'A New User has been Created',\n    icon: <Icon type=\"smile\" style={{ color: '#9B7DDC' }} />\n  })\n}\n\nconst RegistrationForm = (props: any) => {\n  const {\n    image,\n    name,\n    setName,\n    ssn,\n    setSsn,\n    mobile,\n    setMobile,\n    email,\n    setEmail,\n    country,\n    setCountry,\n    addUser,\n    clearForm\n  } = props\n\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  }\n\n  const onClose = () => {\n    setVisible(false)\n  }\n\n  const uniqueID = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n      var r = (Math.random() * 16) | 0,\n        v = c === 'x' ? r : (r & 0x3) | 0x8\n      return v.toString(16)\n    })\n  }\n\n  const handleSubmit = (e: any) => {\n    // e.preventDefault()\n    // let validation = true\n    console.log(e.target)\n    const errorMsg = {\n      image: 'If you want you can upload a picture!',\n      name: 'You must have a Name Right?',\n      ssn: 'Did you forget your number?',\n      mobile: 'I know you have a Phone',\n      email: 'E-Mail cannot be empty',\n      country: 'You forgot to select a country'\n    }\n\n    const error = (value: string) => {\n      message.error(value, 1)\n    }\n\n    if (name && ssn && mobile && email && country) {\n      let newUser = {\n        action: 'Delete',\n        id: uniqueID(),\n        key: uniqueID(),\n        avatar: image,\n        name: name,\n        ssn: ssn,\n        mobile: mobile,\n        email: email,\n        country: country\n      }\n\n      if (localStorage.getItem('storeObj') === null) {\n        let cleanData = [newUser]\n        localStorage.setItem('storeObj', JSON.stringify(cleanData))\n      } else {\n        let lsData = JSON.parse(localStorage.getItem('storeObj') || '')\n        let cleanData = [...lsData, newUser]\n        localStorage.setItem('storeObj', JSON.stringify(cleanData))\n      }\n\n      onClose()\n      openNotification()\n      addUser(newUser)\n\n      ls.remove('name')\n      ls.remove('ssn')\n      ls.remove('mobile')\n      ls.remove('email')\n      ls.remove('country')\n      window.location.reload()\n    }\n    if (!name) {\n      error(`${errorMsg.name}`)\n    }\n    if (!ssn) {\n      error(`${errorMsg.ssn}`)\n    }\n    if (!mobile) {\n      error(`${errorMsg.mobile}`)\n    }\n    if (!email) {\n      error(`${errorMsg.email}`)\n    }\n    if (!country) {\n      error(`${errorMsg.country}`)\n    }\n  }\n\n  let customWidth = window.innerWidth < 500 ? window.innerWidth : window.innerWidth * 0.5\n\n  return (\n    <div>\n      <Button type=\"primary\" onClick={() => showDrawer()}>\n        <Icon type=\"robot\" /> Create New User\n      </Button>\n      <Drawer\n        title=\"Create a new User\"\n        width={customWidth}\n        onClose={() => onClose()}\n        visible={visible}\n      >\n        <Form\n          onSubmit={e => {\n            console.log('Submitted', e)\n          }}\n          layout=\"vertical\"\n          hideRequiredMark\n        >\n          <Row gutter={16}>\n            <Col span={24}>\n              <AvatarInput />\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item label=\"Name\">\n                <NameInput />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item label=\"Social Security No.\">\n                <SsnInput />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item label=\"Mobile\">\n                <MobileInput />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item label=\"E-Mail\">\n                <EmailInput />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item label=\"Country\">\n                <CountryInput />\n              </Form.Item>\n            </Col>\n          </Row>\n          <div\n            style={{\n              position: 'absolute',\n              left: 0,\n              bottom: 0,\n              width: '100%',\n              borderTop: '1px solid #e9e9e9',\n              padding: '10px 16px',\n              background: '#fff',\n              textAlign: 'right'\n            }}\n          >\n            <Button\n              onClick={() => {\n                onClose()\n              }}\n              style={{ marginRight: 8 }}\n            >\n              Cancel\n            </Button>\n            <Button onClick={e => handleSubmit(e)} type=\"primary\">\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Drawer>\n    </div>\n  )\n}\n\nconst DrawerForm = Form.create()(RegistrationForm)\n\nconst mapStateToProps = (state: any, action: any) => {\n  return {\n    ...state,\n    name: state.name,\n    clearForm: state.clearForm,\n    data: [...state.data, action.addUser]\n  }\n}\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addUser: (object: any) => dispatch({ type: actionTypes.ADD_USER, addUser: object }),\n    setName: (value: any) => dispatch({ type: actionTypes.SET_NAME, name: value }),\n    clearForm: (value: boolean) => dispatch({ type: actionTypes.CLEAR_FORM, clearForm: value })\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DrawerForm)\n","import React from 'react'\n\nimport DrawerForm from './Components/DrawerForm'\n\nimport DataTable from './Components/DataTable'\nimport ResponsiveTable from './Components/ResonsiveTable'\nimport NewDataTable from './Components/NewDataTable'\n\nconst MainComponent = () => {\n  return (\n    <div>\n      <DrawerForm />\n\n      {/* <DataTable /> */}\n\n      {/* <ResponsiveTable /> */}\n    </div>\n  )\n}\n\nexport default MainComponent\n","import React, { useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table'\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\nimport { connect } from 'react-redux'\nimport { Popconfirm, Divider, message, Avatar } from 'antd'\nimport * as actionTypes from '../Redux/actions'\n\nconst ResponsiveTable = (props: any) => {\n  const { deleteUser } = props\n  const [userData, setUserData] = useState([])\n\n  const deleteUserLocalStorage = (id: number) => {\n    let current_data = JSON.parse(localStorage.getItem('storeObj') || '')\n    let updatedUserData = current_data.filter((result: any) => result.id !== id)\n    let parsedOutput = JSON.stringify(updatedUserData)\n    localStorage.setItem('storeObj', parsedOutput)\n  }\n\n  const handleDelete = (userObject: any) => {\n    let updatedUserData = userData.filter((result: any) => result.key !== userObject.key)\n    setUserData(() => {\n      return [...updatedUserData]\n    })\n    deleteUser(userObject.id)\n    deleteUserLocalStorage(userObject.id)\n  }\n\n  const confirm = (e: any, userObject: any) => {\n    handleDelete(userObject)\n    message.success('Deleted')\n    console.log(userObject)\n  }\n\n  const cancel = (e: any) => {\n    console.log(e)\n    message.error('Cancelled')\n  }\n\n  const item = () => {\n    if (!localStorage.getItem('storeObj')) {\n      return []\n    } else {\n      let data = localStorage.getItem('storeObj')\n      return JSON.parse(data || '')\n    }\n  }\n  const dataSource = item()\n\n  console.log(dataSource)\n  return (\n    <div style={{ backgroundColor: '#DBEEFB', width: '90vw', opacity: 0.8 }}>\n      <Table>\n        <Thead>\n          <Tr>\n            <Th style={{ padding: 16 }}>Avatar</Th>\n            <Th>Name</Th>\n            <Th>SSN</Th>\n            <Th>E-Mail</Th>\n            <Th>Mobile</Th>\n            <Th>Country</Th>\n            <Th style={{ paddingLeft: 16 }}>Action</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {dataSource.map((userobject: any) => {\n            return (\n              <Tr style={{ padding: 16 }}>\n                <Td>\n                  <div style={{ padding: 16 }}>\n                    <Avatar size={46} icon=\"user\" src={userobject.avatar} />\n                  </div>\n                </Td>\n                <Td>{userobject.name}</Td>\n                <Td>{userobject.ssn}</Td>\n                <Td>{userobject.email}</Td>\n                <Td>{userobject.mobile}</Td>\n                <Td>{userobject.country}</Td>\n                <Td>\n                  <span>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      title=\"Are you sure?\"\n                      onConfirm={e => confirm(e, userobject)}\n                      onCancel={cancel}\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                    >\n                      <a href=\"#\">Delete</a>\n                    </Popconfirm>\n                  </span>\n                </Td>\n              </Tr>\n            )\n          })}\n        </Tbody>\n      </Table>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    ...state\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    deleteUser: (id: any) => dispatch({ type: actionTypes.DELETE_USER, id: id })\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResponsiveTable)\n","import React, { useState } from 'react'\nimport Logo from './Assets/code.svg'\nimport background from './Assets/background.jpg'\n\nimport './App.css'\nimport MainComponent from './MainComponent'\nimport ResponsiveTable from './Components/ResonsiveTable'\nimport DataTable from './Components/DataTable'\n\nconst App: React.FC = () => {\n  const [width] = useState(window.innerWidth)\n  return (\n    <>\n      <div>\n        <div className=\"body1\">\n          <img\n            alt={'Coding Logo'}\n            style={{\n              width: width * 0.15,\n              height: 'auto',\n              borderRadius: 20,\n              justifyContent: 'flex-end'\n            }}\n            src={Logo}\n          />\n          <MainComponent />\n          <ResponsiveTable />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions'\n\nconst initialState = {\n  name: '',\n  ssn: '',\n  mobile: '',\n  email: '',\n  country: '',\n  image: '',\n  clearForm: false,\n  data: [\n    {\n      id: '782323',\n      key: '12390478s239084',\n      avatar: 'Avatar',\n      name: 'Protik Sarkar',\n      ssn: '8803176280',\n      mobile: '0700519493',\n      email: 'sarkar.protik1@gmail.com',\n      country: 'Sweden',\n      action: 'Delete'\n    }\n  ]\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_IMAGE:\n      return {\n        ...state,\n        image: action.image\n      }\n\n    case actionTypes.SET_NAME:\n      return {\n        ...state,\n        name: action.name\n      }\n\n    case actionTypes.SET_SSN:\n      return {\n        ...state,\n        ssn: action.ssn\n      }\n\n    case actionTypes.SET_MOBILE:\n      return {\n        ...state,\n        mobile: action.mobile\n      }\n\n    case actionTypes.SET_EMAIL:\n      return {\n        ...state,\n        email: action.email\n      }\n\n    case actionTypes.SET_COUNTRY:\n      return {\n        ...state,\n        country: action.country\n      }\n\n    case actionTypes.DELETE_USER:\n      let updatedData = state.data.filter(result => result.id !== action.id)\n      return {\n        ...state,\n        data: updatedData\n      }\n\n    case actionTypes.ADD_USER:\n      return {\n        ...state,\n        data: [...state.data, action.addUser]\n      }\n    case actionTypes.CLEAR_FORM:\n      return {\n        ...state,\n        country: action.clearForm\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore } from 'redux'\nimport reducer from './Redux/reducer'\nimport { Provider } from 'react-redux'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}